{"version":3,"sources":["assets/icons/hamburger-menu.svg","assets/icons/hamburger-menu-dark.svg","pages/home/Home.js","context/AuthContext.js","layout/Navbar.js","pages/login/Login.js","pages/signup/Signup.js","pages/dashboard/Dashboard.js","pages/event/CreateEvent.js","pages/event/RegistrationBuilder.js","pages/event/RegistrationForm.js","pages/not-found/NotFound.js","pages/event/sheets/SheetGenerator.js","App.js","serviceWorker.js","interceptors/axios.js","index.js"],"names":["module","exports","Home","className","style","color","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","cookies","Cookies","location","useLocation","checkTokenCookie","get","useState","currentUser","setCurrentUser","userData","setUserData","loading","isOrg","setIsOrg","navigate","useNavigate","orgData","a","signupReq","username","orgUsername","email","orgEmail","password","orgPassword","axios","post","withCredentials","response","hasOwnProperty","console","log","data","message","loginInputs","loginReq","defaults","headers","common","userId","logout","delete","remove","error","res","requestedData","eventData","orgId","formData","eventId","formId","participantData","teamNumber","teamId","useEffect","checkToken","pathname","split","value","orgLogin","userLogin","signup","getData","createEvent","generateEventForm","getEventFormInfo","registerParticipant","getAttendanceData","fetchParticipant","markPresent","Provider","Navbar","navState","setNavState","getWindowSize","screenWidth","setScreenWidth","setLoading","mobileMenuState","toggleMobileMenuState","window","innerWidth","handleWindowResize","addEventListener","removeEventListener","document","scrollPosition","pageYOffset","scrollY","body","scrollTop","documentElement","backgroundColor","src","hamburger","hamburgerDark","alt","id","onClick","marginLeft","borderColor","boxShadow","Login","setLoginInputs","toggleIsOrg","handleLoginInputs","event","name","target","lastVal","e","preventDefault","onSubmit","onChange","type","placeholder","checked","htmlFor","to","Signup","login","signupInputs","setSignupInputs","handleSignupInputs","Dashboard","setData","setParticipantData","participantTable","setParticipantTable","setError","deskMode","toggleDeskMode","teamNumberRef","useRef","tableAllotmentSuccess","setTableAllotmentSuccess","searching","setSearching","attendingLoader","setAttendingLoader","getDashboardData","cleanupPrevParticipant","currentEvent","_id","current","undefined","tableData","eventTitle","eventDescription","totalRegistrations","attending","registrationPath","ref","teamName","teamMembers","map","member","key","universityId","padding","allottedTable","CreateEvent","eventInputData","setEventInputData","isLoading","toggleLoading","handleEventInputData","lastValue","Navigate","RegistrationBuilder","tshirtSize","phnNum","year","department","teamSize","maxTeamSize","formOptions","setFormOptions","setPublishedLink","handleFormOptions","getCurrentEventData","min","RegistrationForm","params","useParams","setFormData","eventInfo","setEventInfo","activeTab","getAttribute","memberId","objName","copyMember","fetchEventInfo","Date","eventStartDate","toLocaleDateString","toLocaleTimeString","eventDuration","ulClassName","activityClassName","tab","title","display","flexWrap","required","selected","getElementsByClassName","click","Array","idx","data-member","data-memberid","NotFound","SheetGenerator","attendanceData","setAttendance","sheetData","setSheetData","setSheetSchema","batch","attendingStatus","registrationDate","signature","remarks","attendance","schemaFlags","setSchemaFlags","buttonRef","resultRef","handleSchemaOptions","fetchAttendance","data-nested","data-title","disabled","schema","path","props","filter","x","length","find","alert","generateHTMLTable","generateExcel","writeTo","scrollIntoView","behaviour","printWindow","open","offsetWidth","offsetHeight","content","write","print","parse","App","setTimeout","exact","element","Boolean","hostname","match","baseURL","interceptors","use","resp","prevReq","config","status","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1a18b5e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hamburger-menu.473aca5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger-menu-dark.1f6bd263.svg\";","import React from 'react'\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className='page-container'>\r\n      <h1 style={{color: \"#fff\"}}>Home</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport Cookies from 'js-cookie';\r\nimport axios from 'axios'\r\n// import { io } from 'socket.io-client'\r\n// import { SOCKET_URL as socketURL } from './config'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n\r\n    const cookies = Cookies; //constructor method depreciated\r\n    const location = useLocation()\r\n    const checkTokenCookie = cookies.get(\"checkToken\");\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [userData, setUserData] = useState()\r\n    const [userNotifications, setNotifications] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [isOrg, setIsOrg] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n    ////////////////////////////////////////////////////////////\r\n    //////////////////////////AUTH FUNCTIONS START HERE//////////////////////////////\r\n    //////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    async function signup(orgData) {\r\n        // setLoading(true)\r\n        const signupReq = {\r\n            username: orgData.orgUsername,\r\n            email: orgData.orgEmail,\r\n            password: orgData.orgPassword\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post(\"org/signup\", signupReq, { withCredentials: true })\r\n            if (response.hasOwnProperty(\"data\")) {\r\n                console.log(response.data);\r\n            } else throw response\r\n            // setLoading(false)\r\n        } catch (error) {\r\n            // setLoading(false)\r\n            throw error.response.data.message\r\n        }\r\n    }\r\n\r\n    async function orgLogin(loginInputs) {\r\n        // setLoading(true)\r\n        const loginReq = {\r\n            email: loginInputs.orgEmail,\r\n            password: loginInputs.orgPassword\r\n        }\r\n        console.log(loginReq);\r\n        try {\r\n            const response = await axios.post(\"org/login\", loginReq)\r\n            if (response.hasOwnProperty(\"data\")) {\r\n                console.log(response.data);\r\n            } else {\r\n                console.log(response);\r\n                throw response\r\n            }\r\n            axios.defaults.headers.common['Authorization'] = `${response.data['accessToken']}`\r\n            console.log(response);\r\n            setCurrentUser(response.data.userId)\r\n            setIsOrg(true)\r\n            // setLoading(false)\r\n        } catch (error) {\r\n            console.log(error.response.data.message);\r\n            // setLoading(false)\r\n            throw error.response.data.message\r\n        }\r\n    }\r\n\r\n    async function userLogin(loginInputs) {\r\n        // setLoading(true)\r\n        const loginReq = {\r\n            email: loginInputs.orgEmail,\r\n            password: loginInputs.orgPassword\r\n        }\r\n        console.log(loginReq);\r\n        try {\r\n            const response = await axios.post(\"user/login\", loginReq)\r\n            if (response.hasOwnProperty(\"data\")) {\r\n                console.log(response.data);\r\n            } else {\r\n                console.log(response);\r\n                throw response\r\n            }\r\n            axios.defaults.headers.common['Authorization'] = `${response.data['accessToken']}`\r\n            console.log(response);\r\n            setCurrentUser(response.data.userId)\r\n            setIsOrg(false)\r\n            // setLoading(false)\r\n        } catch (error) {\r\n            console.log(error.response.data.message);\r\n            // setLoading(false)\r\n            throw error.response.data.message\r\n        }\r\n    }\r\n\r\n    async function logout() {\r\n        try {\r\n            const { data } = await axios.delete(\"refreshToken\", {}, { withCredentials: true })\r\n            console.log(data);\r\n            setCurrentUser(null)\r\n            setUserData(null)\r\n            cookies.remove(\"checkToken\")\r\n            cookies.remove(\"refreshToken\")\r\n            navigate(\"/login\")\r\n        } catch (error) {\r\n            console.error(\"Axios errr\" + error);\r\n        }\r\n    }\r\n\r\n    async function checkToken() {\r\n        // setLoading(true)\r\n        try {\r\n            const response = await axios.post(\"refreshToken\", {})\r\n            if (response.hasOwnProperty(\"data\")) {\r\n                if (response.data.error == false) {\r\n                    setCurrentUser(response.data.userId)\r\n                    setIsOrg(response.data.isOrg)\r\n                    axios.defaults.headers.common['Authorization'] = `${response.data['accessToken']}`\r\n                    return true\r\n                }\r\n            }\r\n            else throw response\r\n            // setLoading(false)\r\n        } catch (error) {\r\n            console.error(error);\r\n            logout()\r\n            navigate(\"/login\")\r\n            throw error.response.data.message\r\n        }\r\n    };\r\n    //////////////////////////////////////////////////////////////////////////////////////////\r\n    //////////////////////////AUTH FUNCTIONS END HERE//////////////////////////////\r\n    ////////////////////////////////////////////////////////////\r\n\r\n\r\n    ////////////////////////////////////////////////////////////\r\n    //////////////////////////ORG DATA FUNCTIONS START HERE//////////////////////////////\r\n    //////////////////////////////////////////////////////////////////////////////////////////\r\n    async function getData() {\r\n        if (!currentUser) return { error: true, message: \"User not found.\" }\r\n        try {\r\n            let res\r\n            if (isOrg)\r\n                res = await axios.post(\"org/details\", { userId: currentUser })\r\n            else\r\n                res = await axios.post(\"user/details\", { userId: currentUser })\r\n            if (res.hasOwnProperty(\"data\")) {\r\n                return res.data.requestedData\r\n            } else throw res\r\n        } catch (error) {\r\n            console.error(error)\r\n            throw error.response.data.message\r\n        }\r\n    }\r\n    // Included in getData\r\n    // async function getCurrentEvent() {\r\n    //     if(!currentUser) return {error: true, message: \"User not found.\"}\r\n    //     try {\r\n    //         let res = await axios.post(\"event/details\", {userId: currentUser})\r\n    //         if(res.hasOwnProperty(\"data\")) {\r\n    //             return res.data.data\r\n    //         } else throw res\r\n    //     } catch (error) {\r\n    //         console.error(error);\r\n    //         throw error.response.data.message\r\n    //     }\r\n    // }\r\n\r\n    async function createEvent(eventData) {\r\n        if (!currentUser) return { error: true, message: \"User not found.\" }\r\n        try {\r\n            const res = await axios.post(\"/event/create\", { ...eventData, orgId: currentUser })\r\n            if (res.hasOwnProperty(\"data\"))\r\n                return res.data.data\r\n            else\r\n                throw res\r\n        } catch (error) {\r\n            console.error(error);\r\n            throw error.response.data.message\r\n        }\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////\r\n    //////////////////////////ORG DATA FUNCTIONS END HERE//////////////////////////////\r\n    ////////////////////////////////////////////////////////////\r\n\r\n\r\n    ////////////////////////////////////////////////////////////\r\n    //////////////////////////EVENT FUNCTIONS START HERE//////////////////////////////\r\n    //////////////////////////////////////////////////////////////////////////////////////////\r\n    async function generateEventForm(formData, eventId) {\r\n        if (!currentUser) return { error: true, message: \"User not found.\" }\r\n        try {\r\n            const res = await axios.post(\"/event/generateForm\", { ...formData, orgId: currentUser, eventId: eventId })\r\n            if (res.hasOwnProperty(\"data\"))\r\n                return res.data.data\r\n            else\r\n                throw res\r\n        } catch (error) {\r\n            console.error(error);\r\n            throw error.response.data.message\r\n        }\r\n    }\r\n\r\n    //Function to fetch abstract details of event\r\n    async function getEventFormInfo(formId) {\r\n        try {\r\n            const res = await axios.post(\"/event/form\", { formId: formId })\r\n            if (res.hasOwnProperty(\"data\"))\r\n                return res.data.requestedData\r\n            else\r\n                throw res\r\n        } catch (error) {\r\n            console.error(error);\r\n            throw error.response.data.message\r\n        }\r\n    }\r\n\r\n    async function registerParticipant(participantData) {\r\n        try {\r\n            const res = await axios.post(\"event/participant/register\", participantData)\r\n            if (res.hasOwnProperty(\"data\"))\r\n                return res.data.requestedData\r\n            else\r\n                throw res\r\n        } catch (error) {\r\n            console.error(error);\r\n            throw error.response.data.message\r\n        }\r\n    }\r\n\r\n    async function getAttendanceData(eventId) {\r\n        try {\r\n            const res = await axios.post(\"/sheet/attendance/view\", { eventId: eventId })\r\n            if (res.hasOwnProperty(\"data\"))\r\n                return res.data.requestedData\r\n            else\r\n                throw res\r\n        } catch (error) {\r\n            console.error(error);\r\n            throw error.response.data.message\r\n        }\r\n    }\r\n\r\n    async function fetchParticipant(teamNumber, eventId) {\r\n        try {\r\n            const res = await axios.post(\"/event/participant/details\", { teamNumber: teamNumber, eventId: eventId })\r\n            if (res.hasOwnProperty(\"data\"))\r\n                return res.data.requestedData\r\n            else\r\n                throw res\r\n        } catch (error) {\r\n            console.error(error);\r\n            throw error.response.data.message\r\n        }\r\n    }\r\n\r\n    async function markPresent(teamId) {\r\n        try {\r\n            const res = await axios.post(\"/event/participant/attending\", { teamId: teamId })\r\n            if (res.hasOwnProperty(\"data\"))\r\n                return res.data.requestedData\r\n            else\r\n                throw res\r\n        } catch (error) {\r\n            console.error(error);\r\n            throw error.response.data.message\r\n        }\r\n    }\r\n    //////////////////////////////////////////////////////////////////////////////////////////\r\n    //////////////////////////EVENT FUNCTIONS END HERE//////////////////////////////\r\n    ////////////////////////////////////////////////////////////\r\n\r\n    useEffect(() => {\r\n        if (checkTokenCookie)\r\n            checkToken();\r\n        else {\r\n            if (!(location.pathname.split(\"form\")[0] == \"/event/\"))\r\n                navigate(\"/login\")\r\n        }\r\n        // if(currentUser) getUserData(currentUser)\r\n    }, [checkTokenCookie, currentUser]);\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        userData,\r\n        orgLogin,\r\n        userLogin,\r\n        signup,\r\n        logout,\r\n        getData,\r\n        isOrg,\r\n        createEvent,\r\n        generateEventForm,\r\n        getEventFormInfo,\r\n        registerParticipant,\r\n        getAttendanceData,\r\n        fetchParticipant,\r\n        markPresent\r\n        // userNotifications,\r\n        // getUserData\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport './Navbar.css'\r\nimport hamburger from '../assets/icons/hamburger-menu.svg'\r\nimport hamburgerDark from '../assets/icons/hamburger-menu-dark.svg'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from '../context/AuthContext'\r\n\r\nfunction Navbar() {\r\n\r\n    const [navState, setNavState] = useState(false)\r\n    const [screenWidth, setScreenWidth] = useState(getWindowSize())\r\n    const [dropdown, toggleDropdown] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const [mobileMenuState, toggleMobileMenuState] = useState(false)\r\n\r\n    const navigate = useNavigate()\r\n    const { currentUser, userData, logout } = useAuth()\r\n\r\n    function openMobileMenu() {\r\n        toggleMobileMenuState(true)\r\n    }\r\n\r\n    function closeMobileMenu() {\r\n        toggleMobileMenuState(false)\r\n    }\r\n\r\n    function getWindowSize() {\r\n        const { innerWidth } = window\r\n        return innerWidth\r\n    }\r\n\r\n    useEffect(() => {\r\n        function handleWindowResize() {\r\n            setScreenWidth(getWindowSize())\r\n        }\r\n        window.addEventListener('resize', handleWindowResize)\r\n        return () => {\r\n            window.removeEventListener('resize', handleWindowResize)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        document.addEventListener(\"scroll\", () => {\r\n            let scrollPosition = window.pageYOffset || window.scrollY || document.body.scrollTop || document.documentElement.scrollTop;\r\n            if (scrollPosition > 0) {\r\n                setNavState(true)\r\n            } else {\r\n                setNavState(false)\r\n            }\r\n        })\r\n        // if (userData) {\r\n        if (currentUser) {\r\n            setLoading(false)\r\n        }\r\n    }, [currentUser, userData])\r\n\r\n\r\n    return (\r\n        <div className='nav-container' style={navState ? { backgroundColor: \"var(--c3)\", color: \"var(--c1)\" } : { backgroundColor: \"var(--c1)\", color: \"var(--c3)\" }}>\r\n            <div className=\"nav-icon-container\">\r\n                <img src={navState ? hamburger : hamburgerDark} alt=\"\" id=\"hamburger\" onClick={openMobileMenu} />\r\n            </div>\r\n            <div className=\"nav-title\">\r\n                <h1 onClick={() => { navigate(\"/\") }}>Organizerinator</h1>\r\n            </div>\r\n            <ul className={screenWidth > 665 ? \"nav-tabs-container\" : \"nav-tabs-container-mobile\"} style={screenWidth > 665 ? { marginLeft: \"0px\" } : (mobileMenuState ? { marginLeft: \"0vw\" } : { marginLeft: \"-200vw\" })}>\r\n                <li id=\"close-mobile-menu\" onClick={closeMobileMenu}>X</li>\r\n                <li className={navState ? \"nav-tab nav-tab-hover\" : \"nav-tab nav-tab-hover-dark\"} onClick={() => { navigate(\"/\") }}>Home</li>\r\n                {currentUser ? loading ? <>Loading...</> : <li className={navState ? \"nav-tab-btn nav-tab-btn-hover\" : \"nav-tab-btn nav-tab-btn-hover-dark\"} onClick={() => navigate(\"/dashboard\")}>Dashboard</li> : <></>}\r\n                <li className={navState ? \"nav-tab-btn nav-tab-btn-hover\" : \"nav-tab-btn nav-tab-btn-hover-dark\"} style={navState ? { borderColor: \"var(--c1)\", boxShadow: \"inset 0 0 0 0 var(--c1)\" } : { borderColor: \"var(--c3)\" }} onClick={currentUser ? logout : () => { navigate(\"/login\") }}>{currentUser ? loading ? <>Loading...</> : \"userData\" ? \"Logout\" : \"\" : \"Login\"}</li>\r\n            </ul>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useEffect, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport './Login.css'\r\n\r\n\r\nfunction Login() {\r\n    const { orgLogin, userLogin } = useAuth()\r\n    const [loginInputs, setLoginInputs] = useState({\r\n        orgEmail: \"\",\r\n        orgPassword: \"\"\r\n    })\r\n    const [errorMsg, setErrorMsg] = useState(\"\")\r\n    const [isOrg, toggleIsOrg] = useState(false)\r\n    const { currentUser } = useAuth()\r\n    const navigate = useNavigate()\r\n\r\n    function handleLoginInputs(event) {\r\n        let name = event.target.name\r\n        let value = event.target.value\r\n        setLoginInputs((lastVal) => {\r\n            return {\r\n                ...lastVal,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    async function handleLogin(e) {\r\n        e.preventDefault()\r\n        try {\r\n            if (isOrg)\r\n                await orgLogin(loginInputs)\r\n            else\r\n                await userLogin(loginInputs)\r\n        } catch (error) {\r\n            console.log(error);\r\n            // setErrorMsg(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentUser) navigate(\"/dashboard\")\r\n    }, [currentUser])\r\n\r\n\r\n    return (\r\n        <div className='page-container'>\r\n            <div className=\"login-container\">\r\n                <h1>Login</h1>\r\n                {/* <p>{errorMsg}</p> */}\r\n                <form onSubmit={handleLogin}>\r\n                    <input onChange={handleLoginInputs} value={loginInputs.orgEmail} name=\"orgEmail\" type=\"text\" placeholder='Org Admin Email' /><br />\r\n                    <input onChange={handleLoginInputs} value={loginInputs.orgPassword} name=\"orgPassword\" type=\"password\" placeholder='Password' /><br />\r\n                    <input onChange={() => toggleIsOrg(!isOrg)} type='checkbox' name=\"isOrg\" checked={isOrg} /><label htmlFor='isOrg'>&nbsp;Org Login</label><br />\r\n                    <button>Login</button>\r\n                </form>\r\n                <br />\r\n                <Link to=\"/signup\">SignUp</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport './Signup.css'\r\n\r\nfunction Signup() {\r\n    const { signup, login } = useAuth()\r\n    const [signupInputs, setSignupInputs] = useState({\r\n        orgUsername: \"\",\r\n        orgEmail: \"\",\r\n        orgPassword: \"\"\r\n    })\r\n\r\n    function handleSignupInputs(event) {\r\n        let name = event.target.name\r\n        let value = event.target.value\r\n        setSignupInputs((lastVal) => {\r\n            return {\r\n                ...lastVal,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    async function handleSignup() {\r\n        try {\r\n            await signup(signupInputs)\r\n        } catch (error) {\r\n            console.log(\"ERRR: \", error);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='page-container'>\r\n            <div className=\"signup-container\">\r\n                <h1>Signup</h1>\r\n                <input onChange={handleSignupInputs} value={signupInputs.orgUsername} name=\"orgUsername\" type=\"text\" placeholder='Org Admin UserName' />\r\n                <input onChange={handleSignupInputs} value={signupInputs.orgEmail} name=\"orgEmail\" type=\"text\" placeholder='Org Admin Email' />\r\n                <input onChange={handleSignupInputs} value={signupInputs.orgPassword} name=\"orgPassword\" type=\"password\" placeholder='Password' />\r\n                <button onClick={handleSignup}>Signup</button>\r\n                <Link to=\"/login\">Login</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport './Dashboard.css'\r\n\r\nfunction Dashboard() {\r\n    const { currentUser, logout, fetchParticipant, getData, isOrg, markPresent } = useAuth()\r\n    const navigate = useNavigate()\r\n    const [data, setData] = useState({})\r\n    const [participantData, setParticipantData] = useState({})\r\n    const [participantTable, setParticipantTable] = useState(-1)\r\n\r\n    const [error, setError] = useState(\"\")\r\n    const [deskMode, toggleDeskMode] = useState(false)\r\n    const teamNumberRef = useRef()\r\n    const [tableAllotmentSuccess, setTableAllotmentSuccess] = useState(false)\r\n\r\n    const [searching, setSearching] = useState(false)\r\n    const [attendingLoader, setAttendingLoader] = useState(false)\r\n\r\n    // const [time, setTime] = useState({})\r\n\r\n    // function msToTime(ms) {\r\n    //     let seconds = (ms / 1000).toFixed(1);\r\n    //     let minutes = (ms / (1000 * 60)).toFixed(1);\r\n    //     let hours = (ms / (1000 * 60 * 60)).toFixed(1);\r\n    //     let days = (ms / (1000 * 60 * 60 * 24)).toFixed(1);\r\n    //     if (seconds < 60) return \"00 Days : 00 Hrs : 00 Min \" + seconds + \" Sec\";\r\n    //     else if (minutes < 60) return \"00 Days : 00 Hours \" + minutes + \" Min\" + seconds + \" Seconds\";\r\n    //     else if (hours < 24) return \"00 Days : \" + hours + \" Hrs \" + minutes + \" Minutes : \" + seconds + \" Seconds\";\r\n    //     else return days + \" Days : \" + hours + \" Hrs : \" + minutes + \" Minutes : \" + seconds + \" Seconds\"\r\n    // }\r\n\r\n    async function getDashboardData() {\r\n        try {\r\n            const data = await getData()\r\n            setData(data)\r\n        } catch (error) {\r\n            setError(error)\r\n        }\r\n    }\r\n\r\n    async function searchParticipant() {\r\n        cleanupPrevParticipant()\r\n        setSearching(true)\r\n        try {\r\n            const eventId = data.currentEvent._id\r\n            const teamNumber = teamNumberRef.current.value\r\n            if(teamNumber < 1 || teamNumber == undefined) return setSearching(false)\r\n            const participantData = await fetchParticipant(teamNumber, eventId)\r\n            setParticipantData(participantData)\r\n            setSearching(false)\r\n        } catch (error) {\r\n            setError(error)\r\n            setSearching(false)\r\n        }\r\n    }\r\n\r\n    async function setParticipantAttending() {\r\n        setAttendingLoader(true)\r\n        try {\r\n            const teamId = participantData._id\r\n            const tableData = await markPresent(teamId)\r\n            setParticipantTable(tableData)\r\n            setAttendingLoader(false)\r\n            setTableAllotmentSuccess(true)\r\n        } catch (error) {\r\n            setError(error)\r\n            setAttendingLoader(false)\r\n        }\r\n    }\r\n\r\n    function cleanupPrevParticipant() {\r\n        setTableAllotmentSuccess(false)\r\n        setParticipantTable(false)\r\n        setParticipantData({})\r\n        setError(\"\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDashboardData()\r\n    }, [currentUser, isOrg])\r\n\r\n\r\n    return (\r\n        <div className='page-container dashboard-container'>\r\n            <h1>DASHBOARD</h1>\r\n            {!deskMode &&\r\n                <>\r\n                    <div className=\"main-card-dashboard\">\r\n                        <h2>Current Event</h2>\r\n                        {data &&\r\n                            <div className=\"event-details\">\r\n                                <div className=\"event-detail-s1\">\r\n                                    <div className=\"event-title\">{data.currentEvent?.eventTitle}</div>\r\n                                    <div className=\"event-description\">{data.currentEvent?.eventDescription}</div>\r\n                                    {/* <div className=\"countdown-container\">{ }</div> */}\r\n                                    <div className=\"total-registrations\">Total Registrations: {data.currentEvent?.totalRegistrations}</div>\r\n                                    <div className=\"attending\">Attending: {data.currentEvent?.attending}</div>\r\n                                    {!data.currentEvent?.registrationPath &&\r\n                                        <button className='dashboard-btn button-48' onClick={() => navigate(\"/registration/build\")}>\r\n                                            <span>\r\n                                                Generate Registration Form\r\n                                            </span>\r\n                                        </button>\r\n                                    }\r\n                                    {data.currentEvent?.registrationPath &&\r\n                                        <button className='dashboard-btn button-48' onClick={() => navigate(`/event/form/${data.currentEvent?.registrationPath}`)}>\r\n                                            <span>\r\n                                                View Registration Form\r\n                                            </span>\r\n                                        </button>\r\n                                    }\r\n                                    <button className='dashboard-btn button-48' onClick={() => {toggleDeskMode(!deskMode); setError(\"\")}}>\r\n                                        <span>\r\n                                            {deskMode ? \"Disable Desk Mode\" : \"Enable Desk Mode\"}\r\n                                        </span>\r\n                                    </button>\r\n                                </div>\r\n                                <div className=\"event-detail-s2\">\r\n                                    <div className=\"attendance-details\">\r\n                                        <button className='dashboard-btn button-48' onClick={() => navigate(\"/sheet/generate/\" + data.currentEvent._id)}>\r\n                                            <span>Sheet Generator</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"evaluation\">\r\n                                        <button className='dashboard-btn button-48'>\r\n                                            <span>Evaluation</span>\r\n                                        </button>\r\n                                    </div>\r\n                                    <div className=\"teams\">\r\n                                        <button className='dashboard-btn button-48'>\r\n                                            <span>Teams Layout</span>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"org-actions\">\r\n                        <button className='dashboard-btn button-48' onClick={() => navigate(\"/create/event\")}>\r\n                            <span className=\"org-actions\">\r\n                                Create New Event\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                </>\r\n            }\r\n            {deskMode &&\r\n                <div className=\"main-card-dashboard\">\r\n                    <div className=\"desk-container\">\r\n                        <div className=\"desk-team-info\">\r\n                            <h2>Desk Mode</h2>\r\n                            <div className=\"input-group-desk\">\r\n                                <input type=\"number\" placeholder='Enter team number' ref={teamNumberRef} />\r\n                                <p>Scan participant's QR code and enter team number.</p>\r\n                                <button className='dashboard-btn button-48' onClick={searchParticipant}>\r\n                                    <span>{searching ? \"Searching...\" : \"Search\"}</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        {participantData._id &&\r\n                            <div className=\"participant-data\">\r\n                                <div className=\"participant-info\">\r\n                                    <div className=\"team-number-name\"><h2>#{participantData.teamNumber}&nbsp;{participantData.teamName}</h2></div>\r\n                                    <div className=\"team-details\">\r\n                                        {\r\n                                            participantData.teamMembers?.map(member => {\r\n                                                return (\r\n                                                    <div className=\"member-data\" key={member._id}>\r\n                                                        <img src={`https://hp.chitkara.edu.in//Storage/Images/Student/${member.universityId}.jpg`} alt=\"\" />\r\n                                                        <span>{member.name}</span>\r\n                                                        <span>{member.universityId}</span>\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"desk-actions\">\r\n                                    <button className='dashboard-btn button-48' style={{ padding: \"10px\" }} onClick={setParticipantAttending}>\r\n                                        <span>\r\n                                            {attendingLoader ? \"Marking Present...\" : \"Mark Present\"}\r\n                                        </span>\r\n                                    </button>\r\n                                    {tableAllotmentSuccess &&\r\n                                        <div className=\"allotted-table-message\">\r\n                                            <h3>Table #{participantTable.allottedTable} allotted!</h3>\r\n                                        </div>\r\n                                    }\r\n                                    {error &&\r\n                                        <div className=\"allotted-table-message\">\r\n                                            <p>{error}</p>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <hr className=\"style-two\" />\r\n                    <button className='dashboard-btn button-48' style={{ padding: \"10px\" }} onClick={() => { toggleDeskMode(!deskMode); getDashboardData(); cleanupPrevParticipant() }}>\r\n                        <span>\r\n                            {deskMode ? \"Disable Desk Mode\" : \"Enable Desk Mode\"}\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { useState } from 'react'\r\nimport './CreateEvent.css'\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nfunction CreateEvent() {\r\n    const { currentUser, createEvent } = useAuth()\r\n    const [eventInputData, setEventInputData] = useState()\r\n    const [isLoading, toggleLoading] = useState()\r\n    const [error, setError] = useState(\"\")\r\n\r\n    function handleEventInputData(e) {\r\n        let name = e.target.name\r\n        let value = e.target.value\r\n        setEventInputData(lastValue => {\r\n            return {\r\n                ...lastValue,\r\n                [name] : value\r\n            }\r\n        })\r\n    } \r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        toggleLoading(true)\r\n        try {\r\n            const res = await createEvent(eventInputData)\r\n            if(res.error) throw res\r\n            else Navigate(\"/dashboard\")\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }\r\n        toggleLoading(false)\r\n    }\r\n\r\n    return (\r\n        <div className='page-container create-event-container'>\r\n            <h1>Create New Event</h1>\r\n            <div className=\"main-card-ce\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"input-group\">\r\n                        <input onChange={handleEventInputData} name=\"eventTitle\" placeholder='Title'/>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <textarea onChange={handleEventInputData} name=\"eventDescription\" placeholder='Description' />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input onChange={handleEventInputData} name=\"eventStartDate\" type='datetime-local' />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input onChange={handleEventInputData} name=\"eventDuration\" type='number' placeholder='Duration in hours' />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <input type=\"submit\" value={isLoading ? \"Loading...\" : \"Create Event\"} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateEvent","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport './RegistrationBuilder.css'\r\n\r\nfunction RegistrationBuilder() {\r\n    const navigate = useNavigate()\r\n    const { currentUser, getData, isOrg, generateEventForm } = useAuth()\r\n    const [data, setData] = useState({})\r\n    const [isLoading, toggleLoading] = useState(false)\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const [formOptions, setFormOptions] = useState(\r\n        {\r\n            name: false,\r\n            universityId: false,\r\n            tshirtSize: false,\r\n            phnNum: false,\r\n            email: false,\r\n            year: false,\r\n            department: false,\r\n            teamName: false,\r\n            teamSize: false,\r\n            teamMembers: false,\r\n            maxTeamSize: 0\r\n        }\r\n    )\r\n\r\n    const [publishedLink, setPublishedLink] = useState(\"\")\r\n\r\n    async function getCurrentEventData() {\r\n        try {\r\n            const data = await getData()\r\n            setData(data)\r\n            console.log(data)\r\n            // const countdown = new Date(data.currentEvent.eventStartDate) - new Date(Date.now())\r\n            // console.log(msToTime(countdown))\r\n\r\n        } catch (error) {\r\n            setError(error)\r\n        }\r\n    }\r\n\r\n    function handleFormOptions(e) {\r\n        let name = e.target.id\r\n        let value\r\n        if (e.target.type == \"checkbox\")\r\n            value = e.target.checked\r\n        else value = e.target.value\r\n\r\n        setFormOptions(lastValue => {\r\n            return {\r\n                ...lastValue,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    async function generateForm(e) {\r\n        e.preventDefault()\r\n        toggleLoading(true)\r\n        try {\r\n            // setFormOptions(lastValue => { return { ...lastValue, eventId: data.currentEvent._id } })\r\n            const res = await generateEventForm(formOptions, data.currentEvent._id)\r\n            setPublishedLink(res)\r\n            toggleLoading(false)\r\n        } catch (error) {\r\n            console.log(error);\r\n            setError(error)\r\n            toggleLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCurrentEventData()\r\n    }, [currentUser, isOrg])\r\n\r\n    return (\r\n        <div className='page-container rb-container'>\r\n            <h1>{data && data.currentEvent?.eventTitle}</h1>\r\n            <div className=\"main-card-rb\">\r\n                <form onSubmit={generateForm}>\r\n                    <p>Please select the columns you need in the registration form.</p>\r\n                    <div className='input-group'>\r\n                        <input onChange={handleFormOptions} type='checkbox' checked={formOptions.name} id='name' /><label htmlFor='name'>Name</label>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <input onChange={handleFormOptions} type='checkbox' checked={formOptions.universityId} id='universityId' /><label htmlFor='universityId'>University Id</label>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <input onChange={handleFormOptions} type='checkbox' checked={formOptions.tshirtSize} id='tshirtSize' /><label htmlFor='tshirtSize'>T-Shirt Size</label>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <input onChange={handleFormOptions} type='checkbox' checked={formOptions.phnNum} id='phnNum' /><label htmlFor='phnNum'>Phone Number</label>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <input onChange={handleFormOptions} type='checkbox' checked={formOptions.email} id='email' /><label htmlFor='email'>Email</label>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <input onChange={handleFormOptions} type='checkbox' checked={formOptions.year} id='year' /><label htmlFor='year'>Batch Start Year</label>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <input onChange={handleFormOptions} type='checkbox' checked={formOptions.department} id='department' /><label htmlFor='department'>Department</label>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <input onChange={handleFormOptions} type='checkbox' checked={formOptions.teamName} id='teamName' /><label htmlFor='teamName'>Team Name</label>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <input onChange={handleFormOptions} type='checkbox' checked={formOptions.teamSize} id='teamSize' /><label htmlFor='teamSize'>Team Size</label>\r\n                    </div>\r\n                    <div className='input-group'>\r\n                        <input onChange={handleFormOptions} type='checkbox' checked={formOptions.teamMembers} id='teamMembers' /><label htmlFor='teamMembers'>Team Members Info</label>\r\n                    </div>\r\n                    {/* ----------------------------------------------------------------------------------------------- */}\r\n                    <div className='input-group'>\r\n                        <label htmlFor='maxTeamSize'>Max Team Size : </label>\r\n                        <input onChange={handleFormOptions} value={formOptions.maxTeamSize} type='number' id='maxTeamSize' min=\"0\" />\r\n                    </div>\r\n                    <input type=\"submit\" value={isLoading ? \"Loading...\" : \"Create From\"} />\r\n                </form>\r\n                <p></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegistrationBuilder","import React, { useEffect, useRef, useState } from 'react'\r\nimport Tabs, { Tab } from 'react-best-tabs';\r\nimport 'react-best-tabs/dist/index.css';\r\n\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { useAuth } from '../../context/AuthContext'\r\nimport './RegistrationForm.css'\r\n\r\nfunction RegistrationForm() {\r\n    const params = useParams()\r\n    const [error, setError] = useState(\"\")\r\n    const [formData, setFormData] = useState({\r\n        teamSize: 2,\r\n    })\r\n    const [eventInfo, setEventInfo] = useState({})\r\n    const [loading, toggleLoading] = useState(false)\r\n\r\n    const [activeTab, setActiveTab] = useState(1)\r\n    const memberTabRef = useRef()\r\n    // const [totalTabs, setTotalTabs] = useState(1)\r\n    const navigate = useNavigate()\r\n\r\n    const { getEventFormInfo, registerParticipant } = useAuth()\r\n\r\n    function handleFormOptions(e) {\r\n        let name = e.target.id\r\n        let value = e.target.value\r\n        if (e.target.getAttribute('data-member')) {\r\n            const memberId = e.target.getAttribute('data-memberid')\r\n            const objName = `member${memberId}`\r\n            let copyMember = { ...formData[`member${memberId}`] }\r\n            copyMember[`${name}`] = value\r\n            setFormData(lastValue => {\r\n                return {\r\n                    ...lastValue,\r\n                    [objName]: copyMember\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            setFormData(lastValue => {\r\n                return {\r\n                    ...lastValue,\r\n                    [name]: value\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    async function handleRegistration(e) {\r\n        e.preventDefault()\r\n        console.log(formData);\r\n        return\r\n        toggleLoading(true)\r\n        try {\r\n            const res = await registerParticipant(formData)\r\n        } catch (error) {\r\n            setError(error)\r\n        }\r\n        toggleLoading(false)\r\n    }\r\n\r\n    async function fetchEventInfo() {\r\n        toggleLoading(true)\r\n        const formId = params.formId\r\n        setFormData(lastValue => {\r\n            return {\r\n                ...lastValue,\r\n                formId: formId\r\n            }\r\n        })\r\n        try {\r\n            const res = await getEventFormInfo(formId)\r\n            setEventInfo(res)\r\n        } catch (error) {\r\n            setError(error)\r\n        }\r\n        toggleLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEventInfo()\r\n        return () => {\r\n            setError(\"\")\r\n            toggleLoading(false)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className='page-container rf-container'>\r\n            <h1>Registration Form</h1>\r\n            <div className=\"main-card-rf\">\r\n                <h2>{eventInfo && eventInfo.eventTitle}</h2>\r\n                <div className=\"event-info\">\r\n                    <div className=\"event-info-col1\">\r\n                        <p>{eventInfo && eventInfo.eventDescription}</p>\r\n                    </div>\r\n                    <div className=\"event-info-col2\">\r\n                        <p>Date: {eventInfo && new Date(eventInfo.eventStartDate).toLocaleDateString() + \" at \" + new Date(eventInfo.eventStartDate).toLocaleTimeString()}</p>\r\n                        <p>Duration: {eventInfo && eventInfo.eventDuration} hours</p>\r\n                    </div>\r\n                </div>\r\n                <form onSubmit={handleRegistration}>\r\n                    {error &&\r\n                        <div className=\"error-container\">\r\n                            {error}\r\n                        </div>\r\n                    }\r\n                    <Tabs activeTab={activeTab}\r\n                        className=\"\"\r\n                        ulClassName=\"\"\r\n                        activityClassName=\"bg-success\"\r\n                        onClick={(event, tab) => { }}\r\n                    >\r\n                        <Tab title=\"Step 1\" className=\"mr-3\">\r\n                            <div className=\"mt-3\">\r\n                                <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n                                    <div className=\"tab-col\">\r\n                                        <h3>Leader Details</h3>\r\n                                        <div className='input-group'>\r\n                                            <label htmlFor='name'>Name: </label><br/><input onChange={handleFormOptions} type='text' value={formData.name} id='name' required={true} />\r\n                                        </div>\r\n                                        <div className='input-group'>\r\n                                            <label htmlFor='universityId'>University Id: </label><br/><input onChange={handleFormOptions} type='number' value={formData.universityId} id='universityId' required={true} min={1900000000} />\r\n                                        </div>\r\n                                        <div className='input-group'>\r\n                                            <label htmlFor='tshirtSize'>T-Shirt Size: </label><br/>\r\n                                            <select onChange={handleFormOptions} type='select' selected={formData.tshirtSize} id='tshirtSize' required={true}>\r\n                                                <option value=\"L\">L</option>\r\n                                                <option value=\"M\">M</option>\r\n                                                <option value=\"S\">S</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className='input-group'>\r\n                                            <label htmlFor='phnNum'>Phone Number: </label><br/><input onChange={handleFormOptions} type='number' value={formData.phnNum} id='phnNum' required={true} />\r\n                                        </div>\r\n                                        <div className='input-group'>\r\n                                            <label htmlFor='email'>Email: </label><br/><input onChange={handleFormOptions} type='email' value={formData.email} id='email' required={true} />\r\n                                        </div>\r\n                                        <div className='input-group'>\r\n                                            <label htmlFor='batch'>Batch Start Year: </label><br/><input onChange={handleFormOptions} type='select' value={formData.year} id='batch' required={true} />\r\n                                        </div>\r\n                                        <div className='input-group'>\r\n                                            <label htmlFor='department'>Department: </label><br/><input onChange={handleFormOptions} type='select' value={formData.department} id='department' required={true} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"tab-col\">\r\n                                        <h3>Team Details</h3>\r\n                                        <div className='input-group'>\r\n                                            <label htmlFor='teamName'>Team Name: </label><br/><input onChange={handleFormOptions} type='text' value={formData.teamName} id='teamName' required={true} />\r\n                                        </div>\r\n                                        <div className='input-group'>\r\n                                            <label htmlFor='teamSize'>Team Size: </label><br/><input onChange={handleFormOptions} type='number' value={formData.teamSize} min=\"1\" id='teamSize' />\r\n                                        </div>\r\n                                        <span className='input-help-text'> &#x1F6C8; Including leader</span>\r\n                                        <div className=\"tab-actions\">\r\n                                            <button type='button' className='dashboard-btn button-48' onClick={() => document.getElementsByClassName(\"mr-3\")[1].click()}><span>Next</span></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Tab>\r\n                        {/* -------------------------------------------------------------------------------------------------------------------------------- */}\r\n                        <Tab title=\"Step 2\" className=\"mr-3\">\r\n                            <div className=\"main-members-container\">\r\n                                {\r\n                                    (formData.teamSize - 1) > 0\r\n                                        ? [...Array(formData.teamSize - 1)].map((data, idx) => {\r\n                                            return (\r\n                                                <div className=\"mt-3\" key={idx}>\r\n                                                    <h3>Member {idx + 1}</h3>\r\n                                                    <div className='input-group'>\r\n                                                        <label htmlFor='name'>Name: </label><input onChange={handleFormOptions} type='text' value={formData[`member${idx + 1}`]?.name} data-member={true} data-memberid={idx + 1} id='name' required={true} />\r\n                                                    </div>\r\n                                                    <div className='input-group'>\r\n                                                        <label htmlFor='universityId'>University Id: </label><input onChange={handleFormOptions} type='number' value={formData[`member${idx + 1}`]?.universityId} data-member={true} data-memberid={idx + 1} id='universityId' required={true} min={1900000000} />\r\n                                                    </div>\r\n                                                    <div className='input-group'>\r\n                                                        <label htmlFor='tshirtSize'>T-Shirt Size: </label>\r\n                                                        <select onChange={handleFormOptions} value={formData[`member${idx + 1}`]?.tshirtSize} data-member={true} data-memberid={idx + 1} id='tshirtSize' required={true}>\r\n                                                            <option value=\"L\">L</option>\r\n                                                            <option value=\"M\">M</option>\r\n                                                            <option value=\"S\">S</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className='input-group'>\r\n                                                        <label htmlFor='phnNum'>Phone Number: </label><input onChange={handleFormOptions} type='number' value={formData[`member${idx + 1}`]?.phnNum} data-member={true} data-memberid={idx + 1} id='phnNum' required={true} />\r\n                                                    </div>\r\n                                                    <div className='input-group'>\r\n                                                        <label htmlFor='email'>Email: </label><input onChange={handleFormOptions} type='email' value={formData[`member${idx + 1}`]?.email} data-member={true} data-memberid={idx + 1} id='email' required={true} />\r\n                                                    </div>\r\n                                                    <div className='input-group'>\r\n                                                        <label htmlFor='batch'>Batch Start Year: </label><input onChange={handleFormOptions} type='select' value={formData[`member${idx + 1}`]?.year} data-member={true} data-memberid={idx + 1} id='batch' required={true} />\r\n                                                    </div>\r\n                                                    <div className='input-group'>\r\n                                                        <label htmlFor='department'>Department: </label><input onChange={handleFormOptions} type='select' value={formData[`member${idx + 1}`]?.department} data-member={true} data-memberid={idx + 1} id='department' required={true} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                        :\r\n                                        <></>\r\n                                }\r\n                            </div>\r\n                            <div className=\"tab-actions\">\r\n                                <button className='dashboard-btn button-48' type='button' onClick={() => document.getElementsByClassName(\"mr-3\")[0].click()}><span>Previous</span></button>\r\n                                <button className='dashboard-btn button-48' type='submit'><span>{loading ? \"Loading...\" : \"Submit\"}</span></button>\r\n                            </div>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className='page-container'>NotFound</div>\r\n  )\r\n}\r\n\r\nexport default NotFound","import React, { useEffect, useRef, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useAuth } from '../../../context/AuthContext'\r\n// import xlsx from \"json-as-xlsx\"\r\nimport {\r\n  generateTable,\r\n  generateHTMLTable,\r\n  generateExcel,\r\n  parseDataToSchema\r\n} from 'json5-to-table'\r\nimport parse from 'html-react-parser'\r\nimport './SheetGenerator.css'\r\n\r\n\r\nfunction SheetGenerator() {\r\n  const params = useParams()\r\n  const [loading, setLoading] = useState(true)\r\n  const [attendanceData, setAttendance] = useState({})\r\n  const [error, setError] = useState(\"\")\r\n  const [sheetData, setSheetData] = useState(\"\")\r\n  const [sheetSchema, setSheetSchema] = useState({})\r\n  const [schemaFlags, setSchemaFlags] = useState(\r\n    {\r\n      teamName: false,\r\n      teamSize: false,\r\n      teamNumber: false,\r\n      teamId: false,\r\n      teamMembers: false,\r\n\r\n      name: false,\r\n      universityId: false,\r\n      tshirtSize: false,\r\n      phnNum: false,\r\n      email: false,\r\n      batch: false,\r\n      department: false,\r\n      memberId: false,\r\n\r\n      attendingStatus: false,\r\n      eventId: false,\r\n      registrationDate: false,\r\n      signature: false,\r\n      remarks: false,\r\n      attendance: false\r\n    }\r\n  )\r\n\r\n  const { getAttendanceData } = useAuth()\r\n\r\n  const buttonRef = useRef()\r\n  const resultRef = useRef()\r\n  \r\n  useEffect(() => {\r\n    fetchAttendance()\r\n    return () => {\r\n      setLoading(true)\r\n      setAttendance({})\r\n    }\r\n  }, [])\r\n\r\n  async function fetchAttendance() {\r\n    setLoading(true)\r\n    try {\r\n      const data = await getAttendanceData(params.eventId)\r\n      setAttendance(data)\r\n      setLoading(false)\r\n    } catch (error) {\r\n      setError(error)\r\n      setLoading(false)\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  function handleSchemaOptions(e) {\r\n    let id = e.target.id\r\n    let value = e.target.checked\r\n\r\n    setSchemaFlags(lastValue => {\r\n      return {\r\n        ...lastValue,\r\n        [id]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  function exportToCSV() {\r\n    let schema = [\r\n      schemaFlags.attendingStatus ? { title: \"Attending\", path: \"attending\" } : null,\r\n      schemaFlags.registrationDate ? { title: \"Registration Date\", path: \"createdAt\" } : null,\r\n      schemaFlags.eventId ? { title: \"Event Id\", path: \"eventId\" } : null,\r\n      schemaFlags.teamName ? { title: \"Team Name\", path: \"teamName\" } : null,\r\n      schemaFlags.teamNumber ? { title: \"Team Number\", path: \"teamNumber\" } : null,\r\n      schemaFlags.teamSize ? { title: \"Team Size\", path: \"teamSize\" } : null,\r\n      schemaFlags.teamId ? { title: \"Team UID\", path: \"_id\" } : null,\r\n      schemaFlags.teamMembers ? {\r\n        title: \"Team Members\", path: \"teamMembers\", props: [\r\n          schemaFlags.teamMembers && schemaFlags.name ? { title: \"Member Name\", path: \"name\" } : null,\r\n          schemaFlags.teamMembers && schemaFlags.universityId ? { title: \"Member University Id\", path: \"universityId\" } : null,\r\n          schemaFlags.teamMembers && schemaFlags.tshirtSize ? { title: \"Member T-shirt Size\", path: \"tshirtSize\" } : null,\r\n          schemaFlags.teamMembers && schemaFlags.email ? { title: \"Member Email\", path: \"email\" } : null,\r\n          schemaFlags.teamMembers && schemaFlags.batch ? { title: \"Member Batch\", path: \"batch\" } : null,\r\n          schemaFlags.teamMembers && schemaFlags.department ? { title: \"Member Department\", path: \"department\" } : null,\r\n          schemaFlags.teamMembers && schemaFlags.memberId ? { title: \"UID\", path: \"_id\" } : null,\r\n          schemaFlags.teamMembers && schemaFlags.signature ? { title: \"Signature\", path: \"signature\" } : null,\r\n          schemaFlags.teamMembers && schemaFlags.remarks ? { title: \"Remarks\", path: \"remarks\" } : null,\r\n          schemaFlags.teamMembers && schemaFlags.attendance ? { title: \"Attendance\", path: \"attendance\" } : null,\r\n        ].filter(x => x != null)\r\n      } : null,\r\n    ].filter(x => x !== null)\r\n\r\n    console.log(schema)\r\n\r\n    if (schema.length < 1 || (schema.find(data => data.path === \"teamMembers\") && schema.find(data => data.path === \"teamMembers\")?.props.length < 1)) return alert(\"Please select atleast one more column\")\r\n    setSheetSchema(schema)\r\n    const data = generateHTMLTable(attendanceData, schema)\r\n    generateExcel(attendanceData, schema, { writeTo: \"sheet.xlsx\" })\r\n    setSheetData(data)\r\n    buttonRef.current.scrollIntoView({ behaviour: \"smooth\" })\r\n  }\r\n\r\n  function printSheet() {\r\n    const printWindow = window.open(\"\", \"\", resultRef.current.offsetWidth, resultRef.current.offsetHeight)\r\n    let content = `\r\n      <head>\r\n        <style>\r\n          td, th {\r\n            border: 1px solid black;\r\n            padding: 5px;\r\n          }  \r\n        </style>\r\n      </head>\r\n      <body>\r\n      ${sheetData}\r\n      </body>\r\n    `\r\n    printWindow.document.write(content)\r\n    printWindow.print()\r\n  }\r\n\r\n  return (\r\n    <div className='page-container'>\r\n      <p className='instructions'>Please select the columns you need in the generated sheet.</p>\r\n      <div className=\"column-selector\">\r\n        <div className=\"col1-attendance\">\r\n          <h3>Team Info</h3>\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' data-nested=\"false\" checked={schemaFlags.teamName} data-title=\"Team Name\" id='teamName' /><label htmlFor='teamName'>Team Name</label>\r\n          </div>\r\n\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' data-nested=\"false\" checked={schemaFlags.teamSize} data-title=\"Team Size\" id='teamSize' /><label htmlFor='teamSize'>Team Size</label>\r\n          </div>\r\n\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' data-nested=\"true\" checked={schemaFlags.teamNumber} data-title=\"Team Number\" id='teamNumber' /><label htmlFor='department'>Team Number</label>\r\n          </div>\r\n\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' data-nested=\"false\" checked={schemaFlags.teamId} data-title=\"Team Id\" id='teamId' /><label htmlFor='teamId'>Team Id</label>\r\n          </div>\r\n\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' data-nested=\"true\" checked={schemaFlags.attendingStatus} data-title=\"Attending Status\" id='attendingStatus' /><label htmlFor='email'>Attending Status</label>\r\n          </div>\r\n\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' data-nested=\"true\" checked={schemaFlags.eventId} data-title=\"Event Id\" id='eventId' /><label htmlFor='department'>Event Id</label>\r\n          </div>\r\n\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' data-nested=\"true\" checked={schemaFlags.registrationDate} data-title=\"Registration Date\" id='registrationDate' /><label htmlFor='department'>Registration Date</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col2-attendance\">\r\n          <h3>Member Info</h3>\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' data-nested=\"false\" checked={schemaFlags.teamMembers} data-title=\"Team Members\" id='teamMembers' /><label htmlFor='teamMembers'>Team Members</label>\r\n          </div>\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' disabled={!schemaFlags.teamMembers} data-nested=\"true\" checked={schemaFlags.name} data-title=\"Name\" id='name' /><label htmlFor='name'>Name</label>\r\n          </div>\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' disabled={!schemaFlags.teamMembers} data-nested=\"true\" checked={schemaFlags.universityId} data-title=\"University Id\" id='universityId' /><label htmlFor='universityId'>University Id</label>\r\n          </div>\r\n\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' disabled={!schemaFlags.teamMembers} data-nested=\"true\" checked={schemaFlags.tshirtSize} data-title=\"T-shirt Size\" id='tshirtSize' /><label htmlFor='tshirtSize'>T-Shirt Size</label>\r\n          </div>\r\n\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' disabled={!schemaFlags.teamMembers} data-nested=\"true\" checked={schemaFlags.phnNum} data-title=\"Phone Number\" id='phnNum' /><label htmlFor='phnNum'>Phone Number</label>\r\n          </div>\r\n\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' disabled={!schemaFlags.teamMembers} data-nested=\"true\" checked={schemaFlags.email} data-title=\"Email\" id='email' /><label htmlFor='email'>Email</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col3-attendance\">\r\n          <h3>Academic Info</h3>\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' disabled={!schemaFlags.teamMembers} data-nested=\"true\" checked={schemaFlags.batch} data-title=\"Batch\" id='batch' /><label htmlFor='batch'>Batch</label>\r\n          </div>\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' disabled={!schemaFlags.teamMembers} data-nested=\"true\" checked={schemaFlags.department} data-title=\"Department\" id='department' /><label htmlFor='department'>Department</label>\r\n          </div>\r\n\r\n          <h3>Blank Fields</h3>\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' disabled={!schemaFlags.teamMembers} data-nested=\"true\" checked={schemaFlags.signature} data-title=\"Signature\" id='signature' /><label htmlFor='signature'>Signature</label>\r\n          </div>\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' data-nested=\"true\" checked={schemaFlags.remarks} data-title=\"Remarks\" id='remarks' /><label htmlFor='remarks'>Remarks</label>\r\n          </div>\r\n          <div className='input-group-checkbox'>\r\n            <input onChange={handleSchemaOptions} type='checkbox' data-nested=\"true\" checked={schemaFlags.attendance} data-title=\"Attendance\" id='attendance' /><label htmlFor='attendance'>Attendance</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button ref={buttonRef} className='download-btn button-48' onClick={exportToCSV} disabled={loading}><span>{loading ? <>Loading...</> : <>Generate Sheet & Download</>}</span></button>\r\n      {sheetData ?\r\n        <>\r\n          <button className='download-btn button-48' onClick={printSheet} disabled={loading}><span>Print</span></button>\r\n          <div className=\"table-container\" id=\"result\" ref={resultRef}>\r\n            <>{parse(sheetData)}</>\r\n          </div>\r\n        </>\r\n        : <></>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SheetGenerator","import './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport Home from './pages/home/Home';\nimport { AuthProvider } from './context/AuthContext';\nimport Navbar from './layout/Navbar';\nimport Login from './pages/login/Login';\nimport Signup from './pages/signup/Signup';\nimport Dashboard from './pages/dashboard/Dashboard';\nimport CreateEvent from './pages/event/CreateEvent';\nimport RegistrationBuilder from './pages/event/RegistrationBuilder';\nimport RegistrationForm from './pages/event/RegistrationForm';\nimport NotFound from './pages/not-found/NotFound';\nimport SheetGenerator from './pages/event/sheets/SheetGenerator';\n\nfunction App() {\n  const [isLoading, setLoading] = useState(true);\n  setTimeout(() => setLoading(false), 1000)\n\n  return isLoading !== true ? (\n    <Router>\n      <AuthProvider>\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n          <Route exact path=\"/login\" element={<Login />} />\n          <Route exact path=\"/signup\" element={<Signup />} />\n          <Route exact path=\"/dashboard\" element={<Dashboard />} />\n          <Route exact path=\"/create/event\" element={<CreateEvent />} />\n          <Route exact path=\"/registration/build\" element={<RegistrationBuilder />} />\n          <Route exact path=\"/event/form/:formId\" element={<RegistrationForm />} />\n          <Route exact path=\"/sheet/generate/:eventId\" element={<SheetGenerator />} />\n          {/*\n          <Route exact path=\"/dashboard\" element={<Dashboard />} />\n          <Route exact path=\"/create\" element={<Dashboard />} />\n          <Route exact path=\"/post\" element={<Dashboard />} />\n          <Route exact path=\"/viewcreated\" element={<Dashboard />} />\n          <Route exact path=\"/viewposted\" element={<Dashboard />} /> */}\n          <Route path='/404' element={<NotFound />}></Route>\n          <Route element={<NotFound />}></Route>\n        </Routes>\n        {/* <Footer /> */}\n      </AuthProvider>\n    </Router>\n  )\n    : (\n      <div className=\"loader-container\">\n        Loading...\n      </div>\n    )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = '/api/';\r\n\r\n// let refresh = false;\r\nlet refresh = false;\r\n\r\naxios.interceptors.response.use(resp => resp, async error => {\r\n    const prevReq = error?.config\r\n    if ((error.response.status === 403 || error.response.status === 401) && !refresh) {\r\n        // refresh = true;\r\n        const response = await axios.post('refreshToken', {});\r\n        if (response.status === 200) {\r\n            axios.defaults.headers.common['Authorization'] = `${response.data['accessToken']}`;\r\n            prevReq.headers['Authorization'] = `${response.data['accessToken']}`;\r\n            return axios(prevReq);\r\n        }\r\n    }\r\n    // refresh = false;\r\n    return error;\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './interceptors/axios'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}